name: Android Build & Test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  # Job 1: Run Lint checks
  lint:
    name: üßπ Lint
    runs-on: macOS-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.0

      - name: Set up JDK 17
        uses: actions/setup-java@v3.13.0
        with:
          distribution: "adopt"
          java-version: "17"
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Run Lint
        # By default, ./gradlew lint will fail the build if lint issues are found.
        # This ensures the workflow exits if lint fails.
        run: ./gradlew lint

      - name: Upload Lint Results (Optional)
        uses: actions/upload-artifact@v4
        with:
          name: lint-results
          path: app/build/reports/lint-results-debug.html # Adjust path as needed

  # Job 2: Run Unit Tests (depends on Lint completing successfully)
  test:
    name: üß™ Unit Tests
    runs-on: macOS-latest
    needs: lint # This job will only run after the 'lint' job is successful

    steps:
      # No need to checkout code again if you pass artifacts, but simpler to checkout for tests/lint usually.
      # If you had a complex build artifact from 'lint' you wanted to reuse, you'd download it here.
      - name: Checkout code
        uses: actions/checkout@v4.1.0

      - name: Set up JDK 17
        uses: actions/setup-java@v3.13.0
        with:
          distribution: "adopt"
          java-version: "17"
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Run Unit Tests
        # By default, ./gradlew test will fail the build if tests fail.
        # This ensures the workflow exits if tests fail.
        run: ./gradlew test

      - name: Upload Test Results (Optional)
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: app/build/reports/tests/testDebugUnitTest # Adjust path as needed

  # Job 3: Build APK and Upload Artifacts (depends on Tests completing successfully)
  build-and-upload:
    name: üèóÔ∏è Build Debug
    runs-on: macOS-latest
    needs: test # This job will only run after the 'test' job is successful

    steps:
      # No need to checkout code again if you pass artifacts, but simpler to checkout for tests/lint usually.
      # If you had a complex build artifact from 'test' you wanted to reuse, you'd download it here.
      - name: Checkout code
        uses: actions/checkout@v4.1.0

      - name: Set up JDK 17
        uses: actions/setup-java@v3.13.0
        with:
          distribution: "adopt"
          java-version: "17"
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Build Debug APK
        run: ./gradlew :app:assembleDebug

      - name: Upload Debug APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk # Adjust path as needed